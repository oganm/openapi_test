% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/well_composed_error_body.R
\docType{class}
\name{WellComposedErrorBody}
\alias{WellComposedErrorBody}
\title{WellComposedErrorBody}
\format{
An \code{R6Class} generator object
}
\description{
WellComposedErrorBody Class

WellComposedErrorBody Class
}
\details{
Create a new WellComposedErrorBody
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{code}}{integer [optional]}

\item{\code{message}}{character [optional]}

\item{\code{errors}}{named list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WellComposedErrorBody-new}{\code{WellComposedErrorBody$new()}}
\item \href{#method-WellComposedErrorBody-toJSON}{\code{WellComposedErrorBody$toJSON()}}
\item \href{#method-WellComposedErrorBody-fromJSON}{\code{WellComposedErrorBody$fromJSON()}}
\item \href{#method-WellComposedErrorBody-toJSONString}{\code{WellComposedErrorBody$toJSONString()}}
\item \href{#method-WellComposedErrorBody-fromJSONString}{\code{WellComposedErrorBody$fromJSONString()}}
\item \href{#method-WellComposedErrorBody-validateJSON}{\code{WellComposedErrorBody$validateJSON()}}
\item \href{#method-WellComposedErrorBody-toString}{\code{WellComposedErrorBody$toString()}}
\item \href{#method-WellComposedErrorBody-isValid}{\code{WellComposedErrorBody$isValid()}}
\item \href{#method-WellComposedErrorBody-getInvalidFields}{\code{WellComposedErrorBody$getInvalidFields()}}
\item \href{#method-WellComposedErrorBody-print}{\code{WellComposedErrorBody$print()}}
\item \href{#method-WellComposedErrorBody-clone}{\code{WellComposedErrorBody$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-new"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new WellComposedErrorBody class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$new(code = NULL, message = NULL, errors = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{code}

\item{\code{message}}{message}

\item{\code{errors}}{errors}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
WellComposedErrorBody in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of WellComposedErrorBody
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of WellComposedErrorBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
WellComposedErrorBody in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of WellComposedErrorBody
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of WellComposedErrorBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to WellComposedErrorBody and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-toString"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of WellComposedErrorBody
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-print"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WellComposedErrorBody-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WellComposedErrorBody-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WellComposedErrorBody$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
