% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geeq_value_object.R
\docType{class}
\name{GeeqValueObject}
\alias{GeeqValueObject}
\title{GeeqValueObject}
\format{
An \code{R6Class} generator object
}
\description{
GeeqValueObject Class

GeeqValueObject Class
}
\details{
Create a new GeeqValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{publicQualityScore}}{numeric [optional]}

\item{\code{publicSuitabilityScore}}{numeric [optional]}

\item{\code{getsScorePublication}}{numeric [optional]}

\item{\code{getsScorePlatformAmount}}{numeric [optional]}

\item{\code{getsScorePlatformsTechMulti}}{numeric [optional]}

\item{\code{getsScoreAvgPlatformPopularity}}{numeric [optional]}

\item{\code{getsScoreAvgPlatformSize}}{numeric [optional]}

\item{\code{getsScoreSampleSize}}{numeric [optional]}

\item{\code{getsScoreRawData}}{numeric [optional]}

\item{\code{getsScoreMissingValues}}{numeric [optional]}

\item{\code{getqScoreOutliers}}{numeric [optional]}

\item{\code{getqScoreSampleMeanCorrelation}}{numeric [optional]}

\item{\code{getqScoreSampleMedianCorrelation}}{numeric [optional]}

\item{\code{getqScoreSampleCorrelationVariance}}{numeric [optional]}

\item{\code{getqScorePlatformsTech}}{numeric [optional]}

\item{\code{getqScoreReplicates}}{numeric [optional]}

\item{\code{getqScoreBatchInfo}}{numeric [optional]}

\item{\code{getqScorePublicBatchEffect}}{numeric [optional]}

\item{\code{getqScorePublicBatchConfound}}{numeric [optional]}

\item{\code{noVectors}}{character [optional]}

\item{\code{corrMatIssues}}{character [optional]}

\item{\code{replicatesIssues}}{character [optional]}

\item{\code{batchCorrected}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GeeqValueObject-new}{\code{GeeqValueObject$new()}}
\item \href{#method-GeeqValueObject-toJSON}{\code{GeeqValueObject$toJSON()}}
\item \href{#method-GeeqValueObject-fromJSON}{\code{GeeqValueObject$fromJSON()}}
\item \href{#method-GeeqValueObject-toJSONString}{\code{GeeqValueObject$toJSONString()}}
\item \href{#method-GeeqValueObject-fromJSONString}{\code{GeeqValueObject$fromJSONString()}}
\item \href{#method-GeeqValueObject-validateJSON}{\code{GeeqValueObject$validateJSON()}}
\item \href{#method-GeeqValueObject-toString}{\code{GeeqValueObject$toString()}}
\item \href{#method-GeeqValueObject-isValid}{\code{GeeqValueObject$isValid()}}
\item \href{#method-GeeqValueObject-getInvalidFields}{\code{GeeqValueObject$getInvalidFields()}}
\item \href{#method-GeeqValueObject-print}{\code{GeeqValueObject$print()}}
\item \href{#method-GeeqValueObject-clone}{\code{GeeqValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new GeeqValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$new(
  id = NULL,
  publicQualityScore = NULL,
  publicSuitabilityScore = NULL,
  getsScorePublication = NULL,
  getsScorePlatformAmount = NULL,
  getsScorePlatformsTechMulti = NULL,
  getsScoreAvgPlatformPopularity = NULL,
  getsScoreAvgPlatformSize = NULL,
  getsScoreSampleSize = NULL,
  getsScoreRawData = NULL,
  getsScoreMissingValues = NULL,
  getqScoreOutliers = NULL,
  getqScoreSampleMeanCorrelation = NULL,
  getqScoreSampleMedianCorrelation = NULL,
  getqScoreSampleCorrelationVariance = NULL,
  getqScorePlatformsTech = NULL,
  getqScoreReplicates = NULL,
  getqScoreBatchInfo = NULL,
  getqScorePublicBatchEffect = NULL,
  getqScorePublicBatchConfound = NULL,
  noVectors = NULL,
  corrMatIssues = NULL,
  replicatesIssues = NULL,
  batchCorrected = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{publicQualityScore}}{publicQualityScore}

\item{\code{publicSuitabilityScore}}{publicSuitabilityScore}

\item{\code{getsScorePublication}}{getsScorePublication}

\item{\code{getsScorePlatformAmount}}{getsScorePlatformAmount}

\item{\code{getsScorePlatformsTechMulti}}{getsScorePlatformsTechMulti}

\item{\code{getsScoreAvgPlatformPopularity}}{getsScoreAvgPlatformPopularity}

\item{\code{getsScoreAvgPlatformSize}}{getsScoreAvgPlatformSize}

\item{\code{getsScoreSampleSize}}{getsScoreSampleSize}

\item{\code{getsScoreRawData}}{getsScoreRawData}

\item{\code{getsScoreMissingValues}}{getsScoreMissingValues}

\item{\code{getqScoreOutliers}}{getqScoreOutliers}

\item{\code{getqScoreSampleMeanCorrelation}}{getqScoreSampleMeanCorrelation}

\item{\code{getqScoreSampleMedianCorrelation}}{getqScoreSampleMedianCorrelation}

\item{\code{getqScoreSampleCorrelationVariance}}{getqScoreSampleCorrelationVariance}

\item{\code{getqScorePlatformsTech}}{getqScorePlatformsTech}

\item{\code{getqScoreReplicates}}{getqScoreReplicates}

\item{\code{getqScoreBatchInfo}}{getqScoreBatchInfo}

\item{\code{getqScorePublicBatchEffect}}{getqScorePublicBatchEffect}

\item{\code{getqScorePublicBatchConfound}}{getqScorePublicBatchConfound}

\item{\code{noVectors}}{noVectors}

\item{\code{corrMatIssues}}{corrMatIssues}

\item{\code{replicatesIssues}}{replicatesIssues}

\item{\code{batchCorrected}}{batchCorrected}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GeeqValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of GeeqValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GeeqValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
GeeqValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of GeeqValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of GeeqValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to GeeqValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of GeeqValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeeqValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GeeqValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeeqValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
