% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audit_event.R
\docType{class}
\name{AuditEvent}
\alias{AuditEvent}
\title{AuditEvent}
\format{
An \code{R6Class} generator object
}
\description{
AuditEvent Class

AuditEvent Class
}
\details{
Create a new AuditEvent
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{action}}{\link{AuditAction} [optional]}

\item{\code{date}}{character [optional]}

\item{\code{detail}}{character [optional]}

\item{\code{eventType}}{\link{AuditEventType} [optional]}

\item{\code{id}}{integer [optional]}

\item{\code{note}}{character [optional]}

\item{\code{performer}}{\link{User} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AuditEvent-new}{\code{AuditEvent$new()}}
\item \href{#method-AuditEvent-toJSON}{\code{AuditEvent$toJSON()}}
\item \href{#method-AuditEvent-fromJSON}{\code{AuditEvent$fromJSON()}}
\item \href{#method-AuditEvent-toJSONString}{\code{AuditEvent$toJSONString()}}
\item \href{#method-AuditEvent-fromJSONString}{\code{AuditEvent$fromJSONString()}}
\item \href{#method-AuditEvent-validateJSON}{\code{AuditEvent$validateJSON()}}
\item \href{#method-AuditEvent-toString}{\code{AuditEvent$toString()}}
\item \href{#method-AuditEvent-isValid}{\code{AuditEvent$isValid()}}
\item \href{#method-AuditEvent-getInvalidFields}{\code{AuditEvent$getInvalidFields()}}
\item \href{#method-AuditEvent-print}{\code{AuditEvent$print()}}
\item \href{#method-AuditEvent-clone}{\code{AuditEvent$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-new"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AuditEvent class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$new(
  action = NULL,
  date = NULL,
  detail = NULL,
  eventType = NULL,
  id = NULL,
  note = NULL,
  performer = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{action}}{action}

\item{\code{date}}{date}

\item{\code{detail}}{detail}

\item{\code{eventType}}{eventType}

\item{\code{id}}{id}

\item{\code{note}}{note}

\item{\code{performer}}{performer}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditEvent in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AuditEvent
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditEvent
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditEvent in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AuditEvent
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditEvent
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AuditEvent and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AuditEvent
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-print"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEvent-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEvent-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEvent$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
