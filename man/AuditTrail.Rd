% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audit_trail.R
\docType{class}
\name{AuditTrail}
\alias{AuditTrail}
\title{AuditTrail}
\format{
An \code{R6Class} generator object
}
\description{
AuditTrail Class

AuditTrail Class
}
\details{
Create a new AuditTrail
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{events}}{list(\link{AuditEvent}) [optional]}

\item{\code{creationEvent}}{\link{AuditEvent} [optional]}

\item{\code{last}}{\link{AuditEvent} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AuditTrail-new}{\code{AuditTrail$new()}}
\item \href{#method-AuditTrail-toJSON}{\code{AuditTrail$toJSON()}}
\item \href{#method-AuditTrail-fromJSON}{\code{AuditTrail$fromJSON()}}
\item \href{#method-AuditTrail-toJSONString}{\code{AuditTrail$toJSONString()}}
\item \href{#method-AuditTrail-fromJSONString}{\code{AuditTrail$fromJSONString()}}
\item \href{#method-AuditTrail-validateJSON}{\code{AuditTrail$validateJSON()}}
\item \href{#method-AuditTrail-toString}{\code{AuditTrail$toString()}}
\item \href{#method-AuditTrail-isValid}{\code{AuditTrail$isValid()}}
\item \href{#method-AuditTrail-getInvalidFields}{\code{AuditTrail$getInvalidFields()}}
\item \href{#method-AuditTrail-print}{\code{AuditTrail$print()}}
\item \href{#method-AuditTrail-clone}{\code{AuditTrail$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-new"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AuditTrail class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$new(
  id = NULL,
  events = NULL,
  creationEvent = NULL,
  last = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{events}}{events}

\item{\code{creationEvent}}{creationEvent}

\item{\code{last}}{last}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditTrail in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AuditTrail
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditTrail
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditTrail in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AuditTrail
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditTrail
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AuditTrail and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AuditTrail
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-print"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditTrail-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AuditTrail-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditTrail$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
