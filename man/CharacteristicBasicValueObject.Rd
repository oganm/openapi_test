% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/characteristic_basic_value_object.R
\docType{class}
\name{CharacteristicBasicValueObject}
\alias{CharacteristicBasicValueObject}
\title{CharacteristicBasicValueObject}
\format{
An \code{R6Class} generator object
}
\description{
CharacteristicBasicValueObject Class

CharacteristicBasicValueObject Class
}
\details{
Create a new CharacteristicBasicValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{value}}{character [optional]}

\item{\code{valueUri}}{character [optional]}

\item{\code{category}}{character [optional]}

\item{\code{categoryUri}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CharacteristicBasicValueObject-new}{\code{CharacteristicBasicValueObject$new()}}
\item \href{#method-CharacteristicBasicValueObject-toJSON}{\code{CharacteristicBasicValueObject$toJSON()}}
\item \href{#method-CharacteristicBasicValueObject-fromJSON}{\code{CharacteristicBasicValueObject$fromJSON()}}
\item \href{#method-CharacteristicBasicValueObject-toJSONString}{\code{CharacteristicBasicValueObject$toJSONString()}}
\item \href{#method-CharacteristicBasicValueObject-fromJSONString}{\code{CharacteristicBasicValueObject$fromJSONString()}}
\item \href{#method-CharacteristicBasicValueObject-validateJSON}{\code{CharacteristicBasicValueObject$validateJSON()}}
\item \href{#method-CharacteristicBasicValueObject-toString}{\code{CharacteristicBasicValueObject$toString()}}
\item \href{#method-CharacteristicBasicValueObject-isValid}{\code{CharacteristicBasicValueObject$isValid()}}
\item \href{#method-CharacteristicBasicValueObject-getInvalidFields}{\code{CharacteristicBasicValueObject$getInvalidFields()}}
\item \href{#method-CharacteristicBasicValueObject-print}{\code{CharacteristicBasicValueObject$print()}}
\item \href{#method-CharacteristicBasicValueObject-clone}{\code{CharacteristicBasicValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new CharacteristicBasicValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$new(
  id = NULL,
  value = NULL,
  valueUri = NULL,
  category = NULL,
  categoryUri = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{value}}{value}

\item{\code{valueUri}}{valueUri}

\item{\code{category}}{category}

\item{\code{categoryUri}}{categoryUri}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CharacteristicBasicValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of CharacteristicBasicValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CharacteristicBasicValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CharacteristicBasicValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of CharacteristicBasicValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CharacteristicBasicValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to CharacteristicBasicValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of CharacteristicBasicValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CharacteristicBasicValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CharacteristicBasicValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CharacteristicBasicValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
