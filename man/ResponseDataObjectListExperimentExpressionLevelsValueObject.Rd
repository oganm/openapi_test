% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/response_data_object_list_experiment_expression_levels_value_object.R
\docType{class}
\name{ResponseDataObjectListExperimentExpressionLevelsValueObject}
\alias{ResponseDataObjectListExperimentExpressionLevelsValueObject}
\title{ResponseDataObjectListExperimentExpressionLevelsValueObject}
\format{
An \code{R6Class} generator object
}
\description{
ResponseDataObjectListExperimentExpressionLevelsValueObject Class

ResponseDataObjectListExperimentExpressionLevelsValueObject Class
}
\details{
Create a new ResponseDataObjectListExperimentExpressionLevelsValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{list(\link{ExperimentExpressionLevelsValueObject}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-new}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$new()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSON}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$toJSON()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSON}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$fromJSON()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSONString}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$toJSONString()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSONString}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$fromJSONString()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-validateJSON}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$validateJSON()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toString}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$toString()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-isValid}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$isValid()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-getInvalidFields}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$getInvalidFields()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-print}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$print()}}
\item \href{#method-ResponseDataObjectListExperimentExpressionLevelsValueObject-clone}{\code{ResponseDataObjectListExperimentExpressionLevelsValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ResponseDataObjectListExperimentExpressionLevelsValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$new(
  data = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{data}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResponseDataObjectListExperimentExpressionLevelsValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ResponseDataObjectListExperimentExpressionLevelsValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$fromJSON(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResponseDataObjectListExperimentExpressionLevelsValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResponseDataObjectListExperimentExpressionLevelsValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ResponseDataObjectListExperimentExpressionLevelsValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResponseDataObjectListExperimentExpressionLevelsValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ResponseDataObjectListExperimentExpressionLevelsValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ResponseDataObjectListExperimentExpressionLevelsValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectListExperimentExpressionLevelsValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectListExperimentExpressionLevelsValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectListExperimentExpressionLevelsValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
