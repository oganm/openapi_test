% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alternate_name.R
\docType{class}
\name{AlternateName}
\alias{AlternateName}
\title{AlternateName}
\format{
An \code{R6Class} generator object
}
\description{
AlternateName Class

AlternateName Class
}
\details{
Create a new AlternateName
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{character [optional]}

\item{\code{id}}{integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AlternateName-new}{\code{AlternateName$new()}}
\item \href{#method-AlternateName-toJSON}{\code{AlternateName$toJSON()}}
\item \href{#method-AlternateName-fromJSON}{\code{AlternateName$fromJSON()}}
\item \href{#method-AlternateName-toJSONString}{\code{AlternateName$toJSONString()}}
\item \href{#method-AlternateName-fromJSONString}{\code{AlternateName$fromJSONString()}}
\item \href{#method-AlternateName-validateJSON}{\code{AlternateName$validateJSON()}}
\item \href{#method-AlternateName-toString}{\code{AlternateName$toString()}}
\item \href{#method-AlternateName-isValid}{\code{AlternateName$isValid()}}
\item \href{#method-AlternateName-getInvalidFields}{\code{AlternateName$getInvalidFields()}}
\item \href{#method-AlternateName-print}{\code{AlternateName$print()}}
\item \href{#method-AlternateName-clone}{\code{AlternateName$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-new"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AlternateName class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$new(name = NULL, id = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name}

\item{\code{id}}{id}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AlternateName in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AlternateName
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AlternateName
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AlternateName in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AlternateName
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AlternateName
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AlternateName and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AlternateName
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-print"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlternateName-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AlternateName-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlternateName$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
