% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenotype_mapping_type.R
\docType{class}
\name{PhenotypeMappingType}
\alias{PhenotypeMappingType}
\title{PhenotypeMappingType}
\format{
An \code{R6Class} generator object
}
\description{
PhenotypeMappingType Class

PhenotypeMappingType Class
}
\details{
Create a new PhenotypeMappingType
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{value}}{character [optional]}

\item{\code{mutable}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PhenotypeMappingType-new}{\code{PhenotypeMappingType$new()}}
\item \href{#method-PhenotypeMappingType-toJSON}{\code{PhenotypeMappingType$toJSON()}}
\item \href{#method-PhenotypeMappingType-fromJSON}{\code{PhenotypeMappingType$fromJSON()}}
\item \href{#method-PhenotypeMappingType-toJSONString}{\code{PhenotypeMappingType$toJSONString()}}
\item \href{#method-PhenotypeMappingType-fromJSONString}{\code{PhenotypeMappingType$fromJSONString()}}
\item \href{#method-PhenotypeMappingType-validateJSON}{\code{PhenotypeMappingType$validateJSON()}}
\item \href{#method-PhenotypeMappingType-toString}{\code{PhenotypeMappingType$toString()}}
\item \href{#method-PhenotypeMappingType-isValid}{\code{PhenotypeMappingType$isValid()}}
\item \href{#method-PhenotypeMappingType-getInvalidFields}{\code{PhenotypeMappingType$getInvalidFields()}}
\item \href{#method-PhenotypeMappingType-print}{\code{PhenotypeMappingType$print()}}
\item \href{#method-PhenotypeMappingType-clone}{\code{PhenotypeMappingType$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-new"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PhenotypeMappingType class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$new(value = NULL, mutable = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{value}

\item{\code{mutable}}{mutable}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PhenotypeMappingType in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PhenotypeMappingType
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PhenotypeMappingType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PhenotypeMappingType in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PhenotypeMappingType
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PhenotypeMappingType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PhenotypeMappingType and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PhenotypeMappingType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-print"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PhenotypeMappingType-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PhenotypeMappingType-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PhenotypeMappingType$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
