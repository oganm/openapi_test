% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audit_event_value_object.R
\docType{class}
\name{AuditEventValueObject}
\alias{AuditEventValueObject}
\title{AuditEventValueObject}
\format{
An \code{R6Class} generator object
}
\description{
AuditEventValueObject Class

AuditEventValueObject Class
}
\details{
Create a new AuditEventValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{performer}}{character [optional]}

\item{\code{date}}{character [optional]}

\item{\code{action}}{character [optional]}

\item{\code{note}}{character [optional]}

\item{\code{detail}}{character [optional]}

\item{\code{eventType}}{\link{AuditEventType} [optional]}

\item{\code{actionName}}{character [optional]}

\item{\code{eventTypeName}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AuditEventValueObject-new}{\code{AuditEventValueObject$new()}}
\item \href{#method-AuditEventValueObject-toJSON}{\code{AuditEventValueObject$toJSON()}}
\item \href{#method-AuditEventValueObject-fromJSON}{\code{AuditEventValueObject$fromJSON()}}
\item \href{#method-AuditEventValueObject-toJSONString}{\code{AuditEventValueObject$toJSONString()}}
\item \href{#method-AuditEventValueObject-fromJSONString}{\code{AuditEventValueObject$fromJSONString()}}
\item \href{#method-AuditEventValueObject-validateJSON}{\code{AuditEventValueObject$validateJSON()}}
\item \href{#method-AuditEventValueObject-toString}{\code{AuditEventValueObject$toString()}}
\item \href{#method-AuditEventValueObject-isValid}{\code{AuditEventValueObject$isValid()}}
\item \href{#method-AuditEventValueObject-getInvalidFields}{\code{AuditEventValueObject$getInvalidFields()}}
\item \href{#method-AuditEventValueObject-print}{\code{AuditEventValueObject$print()}}
\item \href{#method-AuditEventValueObject-clone}{\code{AuditEventValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AuditEventValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$new(
  id = NULL,
  performer = NULL,
  date = NULL,
  action = NULL,
  note = NULL,
  detail = NULL,
  eventType = NULL,
  actionName = NULL,
  eventTypeName = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{performer}}{performer}

\item{\code{date}}{date}

\item{\code{action}}{action}

\item{\code{note}}{note}

\item{\code{detail}}{detail}

\item{\code{eventType}}{eventType}

\item{\code{actionName}}{actionName}

\item{\code{eventTypeName}}{eventTypeName}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditEventValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of AuditEventValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditEventValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
AuditEventValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of AuditEventValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of AuditEventValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to AuditEventValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of AuditEventValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuditEventValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AuditEventValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuditEventValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
