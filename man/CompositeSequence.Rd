% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/composite_sequence.R
\docType{class}
\name{CompositeSequence}
\alias{CompositeSequence}
\title{CompositeSequence}
\format{
An \code{R6Class} generator object
}
\description{
CompositeSequence Class

CompositeSequence Class
}
\details{
Create a new CompositeSequence
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{character [optional]}

\item{\code{description}}{character [optional]}

\item{\code{id}}{integer [optional]}

\item{\code{biologicalCharacteristic}}{\link{BioSequence} [optional]}

\item{\code{arrayDesign}}{\link{ArrayDesign} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CompositeSequence-new}{\code{CompositeSequence$new()}}
\item \href{#method-CompositeSequence-toJSON}{\code{CompositeSequence$toJSON()}}
\item \href{#method-CompositeSequence-fromJSON}{\code{CompositeSequence$fromJSON()}}
\item \href{#method-CompositeSequence-toJSONString}{\code{CompositeSequence$toJSONString()}}
\item \href{#method-CompositeSequence-fromJSONString}{\code{CompositeSequence$fromJSONString()}}
\item \href{#method-CompositeSequence-validateJSON}{\code{CompositeSequence$validateJSON()}}
\item \href{#method-CompositeSequence-toString}{\code{CompositeSequence$toString()}}
\item \href{#method-CompositeSequence-isValid}{\code{CompositeSequence$isValid()}}
\item \href{#method-CompositeSequence-getInvalidFields}{\code{CompositeSequence$getInvalidFields()}}
\item \href{#method-CompositeSequence-print}{\code{CompositeSequence$print()}}
\item \href{#method-CompositeSequence-clone}{\code{CompositeSequence$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-new"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new CompositeSequence class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$new(
  name = NULL,
  description = NULL,
  id = NULL,
  biologicalCharacteristic = NULL,
  arrayDesign = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name}

\item{\code{description}}{description}

\item{\code{id}}{id}

\item{\code{biologicalCharacteristic}}{biologicalCharacteristic}

\item{\code{arrayDesign}}{arrayDesign}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompositeSequence in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of CompositeSequence
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompositeSequence
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
CompositeSequence in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of CompositeSequence
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of CompositeSequence
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to CompositeSequence and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-toString"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of CompositeSequence
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-print"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CompositeSequence-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CompositeSequence-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CompositeSequence$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
