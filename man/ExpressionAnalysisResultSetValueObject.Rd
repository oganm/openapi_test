% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expression_analysis_result_set_value_object.R
\docType{class}
\name{ExpressionAnalysisResultSetValueObject}
\alias{ExpressionAnalysisResultSetValueObject}
\title{ExpressionAnalysisResultSetValueObject}
\format{
An \code{R6Class} generator object
}
\description{
ExpressionAnalysisResultSetValueObject Class

ExpressionAnalysisResultSetValueObject Class
}
\details{
Create a new ExpressionAnalysisResultSetValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{analysis}}{\link{DifferentialExpressionAnalysisValueObject} [optional]}

\item{\code{experimentalFactors}}{list(\link{ExperimentalFactorValueObject}) [optional]}

\item{\code{results}}{list(\link{DifferentialExpressionAnalysisResultValueObject}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ExpressionAnalysisResultSetValueObject-new}{\code{ExpressionAnalysisResultSetValueObject$new()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-toJSON}{\code{ExpressionAnalysisResultSetValueObject$toJSON()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-fromJSON}{\code{ExpressionAnalysisResultSetValueObject$fromJSON()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-toJSONString}{\code{ExpressionAnalysisResultSetValueObject$toJSONString()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-fromJSONString}{\code{ExpressionAnalysisResultSetValueObject$fromJSONString()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-validateJSON}{\code{ExpressionAnalysisResultSetValueObject$validateJSON()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-toString}{\code{ExpressionAnalysisResultSetValueObject$toString()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-isValid}{\code{ExpressionAnalysisResultSetValueObject$isValid()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-getInvalidFields}{\code{ExpressionAnalysisResultSetValueObject$getInvalidFields()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-print}{\code{ExpressionAnalysisResultSetValueObject$print()}}
\item \href{#method-ExpressionAnalysisResultSetValueObject-clone}{\code{ExpressionAnalysisResultSetValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ExpressionAnalysisResultSetValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$new(
  id = NULL,
  analysis = NULL,
  experimentalFactors = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{analysis}}{analysis}

\item{\code{experimentalFactors}}{experimentalFactors}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ExpressionAnalysisResultSetValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ExpressionAnalysisResultSetValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ExpressionAnalysisResultSetValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ExpressionAnalysisResultSetValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ExpressionAnalysisResultSetValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ExpressionAnalysisResultSetValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ExpressionAnalysisResultSetValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ExpressionAnalysisResultSetValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ExpressionAnalysisResultSetValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ExpressionAnalysisResultSetValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ExpressionAnalysisResultSetValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
