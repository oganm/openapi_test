% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_data_object_api_info_value_object.R
\docType{class}
\name{ResponseDataObjectApiInfoValueObject}
\alias{ResponseDataObjectApiInfoValueObject}
\title{ResponseDataObjectApiInfoValueObject}
\format{
An \code{R6Class} generator object
}
\description{
ResponseDataObjectApiInfoValueObject Class

ResponseDataObjectApiInfoValueObject Class
}
\details{
Create a new ResponseDataObjectApiInfoValueObject
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{\link{ApiInfoValueObject} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ResponseDataObjectApiInfoValueObject-new}{\code{ResponseDataObjectApiInfoValueObject$new()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-toJSON}{\code{ResponseDataObjectApiInfoValueObject$toJSON()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-fromJSON}{\code{ResponseDataObjectApiInfoValueObject$fromJSON()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-toJSONString}{\code{ResponseDataObjectApiInfoValueObject$toJSONString()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-fromJSONString}{\code{ResponseDataObjectApiInfoValueObject$fromJSONString()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-validateJSON}{\code{ResponseDataObjectApiInfoValueObject$validateJSON()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-toString}{\code{ResponseDataObjectApiInfoValueObject$toString()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-isValid}{\code{ResponseDataObjectApiInfoValueObject$isValid()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-getInvalidFields}{\code{ResponseDataObjectApiInfoValueObject$getInvalidFields()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-print}{\code{ResponseDataObjectApiInfoValueObject$print()}}
\item \href{#method-ResponseDataObjectApiInfoValueObject-clone}{\code{ResponseDataObjectApiInfoValueObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ResponseDataObjectApiInfoValueObject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$new(data = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{data}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResponseDataObjectApiInfoValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ResponseDataObjectApiInfoValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResponseDataObjectApiInfoValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResponseDataObjectApiInfoValueObject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ResponseDataObjectApiInfoValueObject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResponseDataObjectApiInfoValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ResponseDataObjectApiInfoValueObject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ResponseDataObjectApiInfoValueObject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-print"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResponseDataObjectApiInfoValueObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ResponseDataObjectApiInfoValueObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResponseDataObjectApiInfoValueObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
